#!/bin/bash


num_stages=${PATH64_BOOTSTRAP_STAGES}

OPT="-O2"

currdir=${CMAKE_CURRENT_BINARY_DIR}
srcdir=${Path64_SOURCE_DIR}
final_inst_dir=$currdir/final_inst
stage=0
CC=pathcc
CXX=pathCC
FORT=pathf90

OLD_PATH=$PATH
export PATH=${Path64_BINARY_DIR}/bin:$PATH
export LD_LIBRARY_PATH=${Path64_BINARY_DIR}/lib/3.9.99/x8664/64

cd $currdir

rm -rf build inst stage?

while [ $stage -lt $num_stages ]; do
    mkdir build
    cd build
    ${CMAKE_COMMAND} -D CMAKE_INSTALL_PREFIX=$final_inst_dir \
                     -D PATH64_ENABLE_MATHLIBS=ON \
                     -D PATH64_ENABLE_HUGEPAGES=ON \
                     -D PATH64_ENABLE_TARGETS=x8664_64 \
                     -D PSC_CRT_PATH_x8664_64=${PSC_CRT_PATH_x8664_64} \
                     -D PSC_DYNAMIC_LINKER_x8664_64=${PSC_DYNAMIC_LINKER_x8664_64} \
                     -D CMAKE_SKIP_RPATH=ON \
                     -D CMAKE_C_COMPILER=$CC \
                     -D CMAKE_CXX_COMPILER=$CXX \
                     -D CMAKE_Fortran_COMPILER=$FORT \
                     -D CMAKE_C_FLAGS="$OPT" \
                     -D CMAKE_CXX_FLAGS="$OPT" \
                     -D CMAKE_Fortran_FLAGS="$OPT" \
                     -D PSC_LIBSUPCPP_PATH_x8664_64=${PSC_LIBSUPCPP_PATH_x8664_64} \
                     -D PSC_LIBSTDCPP_PATH_x8664_64=${PSC_LIBSTDCPP_PATH_x8664_64} \
                     -D PSC_LIBGCC_PATH_x8664_64=${PSC_LIBGCC_PATH_x8664_64} \
                     -D PSC_LIBGCC_EH_PATH_x8664_64=${PSC_LIBGCC_EH_PATH_x8664_64} \
                     -D PSC_LIBGCC_S_PATH_x8664_64=${PSC_LIBGCC_S_PATH_x8664_64} \
                     $srcdir > cmake.out 2>&1
    ${CMAKE_MAKE_PROGRAM} -j20 VERBOSE=1 > make.out 2>&1
    if [ $? -ne 0 ]; then
	stage=`expr $stage + 1`
	echo Build failed during stage $stage
	exit 1
    fi
    cd ..
    if [ -d inst ]; then
	mv inst stage$stage
    fi
    mv build inst
    if [ $stage -eq 0 ]; then
	# Set PATH and LD_LIBRARY_PATH for the second and later stages
	PATH=$currdir/inst/bin:$OLD_PATH
	export LD_LIBRARY_PATH=$currdir/build/lib/3.9.99/x8664/64:$currdir/inst/lib/3.9.99/x8664/64
    fi
    pstage=$stage
    stage=`expr $stage + 1`
    if [ -d stage$pstage ]; then
	rm -f cmp.s$pstage.s$stage.out
	cd stage$pstage
	for i in `find . -name \*.o`; do
	    cmp $i ../inst/$i 16 16 > /dev/null 2>&1
	    cmpret=$?
	    if [ $cmpret -eq 1 ]; then
		echo warning: $i differs >> ../cmp.s$pstage.s$stage.out
	    fi
	done
	cd ..
    fi
done

